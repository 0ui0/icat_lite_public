// Generated by CoffeeScript 2.6.1
var QueryTypes, childProcess, fs, installData, pathLib;

fs = require("fs-extra");

pathLib = require("path");

installData = require("../../install_data");

childProcess = require("child_process");

({QueryTypes} = require("sequelize"));

module.exports = (server) => {
  return server.route({
    method: "get",
    path: "/database/roles/get/{oid?}",
    options: {
      validate: {
        params: Joi.object({
          oid: Joi.number()
        })
      }
    },
    handler: async function(req, h) {
      var allCount, err, list, par;
      try {
        par = req.params;
        console.log(par);
        if (!installData.seq) {
          return {
            ok: false,
            msg: "未连接到数据库，请启动服务"
          };
        }
        if (par.oid) {
          list = (await installData.seq.query("SELECT oid,rolname,rolsuper,rolcanlogin FROM pg_roles WHERE rolcanlogin=true AND oid=?", {
            type: QueryTypes.SELECT,
            replacements: [par.oid]
          }));
        } else {
          list = (await installData.seq.query("SELECT oid,rolname,rolsuper,rolcanlogin FROM pg_roles WHERE rolcanlogin=true", {
            type: QueryTypes.SELECT
          }));
          allCount = (await installData.seq.query("SELECT COUNT(*) as count FROM pg_roles WHERE rolcanlogin=true", {
            type: QueryTypes.SELECT
          }));
        }
        return {
          ok: true,
          data: list,
          allCount: allCount,
          msg: "获取数据库用户列表成功"
        };
      } catch (error) {
        err = error;
        console.log(err);
        return {
          ok: false,
          msg: "服务器内部错误"
        };
      }
    }
  });
};

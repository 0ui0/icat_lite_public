// Generated by CoffeeScript 2.6.1
var Iron, fs, installData, pathLib;

fs = require("fs-extra");

installData = require("../../install_data");

Iron = require("@hapi/iron");

pathLib = require("path");

module.exports = (server) => {
  return server.route({
    method: "post",
    path: "/login",
    options: {
      auth: {
        mode: "try"
      },
      validate: {
        payload: Joi.object({
          password: Joi.string().min(8).error(new Error("密码至少8个字符"))
        })
      }
    },
    handler: async function(req, h) {
      var cookieStr, err, installed, que;
      try {
        que = req.payload;
        installed = JSON.parse((await fs.readFile(pathLib.resolve("./installed.json"))));
        if (installData.pwdErrorCount > 5) {
          if (!installData.timer) {
            installData.timer = setTimeout(() => {
              installData.timer = null;
              return installData.pwdErrorCount = 0;
            }, 5 * 3600 * 1000);
          }
          return {
            ok: false,
            msg: "密码错误次数过多，请稍后再试"
          };
        }
        await new Promise((res, rej) => {
          return setTimeout(function() {
            return res();
          }, Math.random() * 120);
        });
        if (que.password !== installed.panelPwd) {
          installData.pwdErrorCount++;
          return {
            ok: false,
            msg: "密码错误"
          };
        }
        if (que.password === installed.panelPwd) {
          cookieStr = (await Iron.seal({
            login: true,
            timestamp: Date.now()
          }, installed.cookiePwd, Iron.defaults));
          h.state("install", cookieStr, {
            path: "/",
            isHttpOnly: false,
            isSecure: false
          });
          return {
            
            //return h.redirect("/")
            ok: true,
            msg: "登录成功"
          };
        }
      } catch (error) {
        err = error;
        console.log(err);
        return {
          ok: false,
          msg: "服务器内部错误"
        };
      }
    }
  });
};

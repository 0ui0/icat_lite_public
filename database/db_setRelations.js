// Generated by CoffeeScript 2.6.1
var constraints, unique;

constraints = true;

unique = false;

module.exports = (db) => {
  //注意设置外键必须双方都设置，否则程序会自动反向设置

  //用户 用户拓展 一对一关系
  db.icat_users.hasOne(db.icat_users_extend, {
    foreignKey: "uid",
    onDelete: "CASCADE",
    allowNull: "false",
    constraints: constraints
  });
  db.icat_users_extend.belongsTo(db.icat_users, {
    foreignKey: "uid",
    constraints: constraints
  });
  //用户 帖子 一对多关系
  db.icat_users_extend.hasMany(db.icat_posts, {
    sourceKey: "uid",
    foreignKey: "uid",
    onDelete: "CASCADE",
    constraints: constraints
  });
  db.icat_posts.belongsTo(db.icat_users_extend, {
    foreignKey: "uid",
    targetKey: "uid",
    constraints: constraints
  });
  //用户 通知 一对多关系 两个外键
  db.icat_users_extend.hasMany(db.icat_notices, {
    sourceKey: "uid",
    foreignKey: {
      name: "receiverId",
      allowNull: false //允许非空意味着可以消息可以不依赖用户而存在（系统消息）
    },
    constraints: constraints
  });
  db.icat_notices.belongsTo(db.icat_users_extend, {
    sourceKey: "uid",
    foreignKey: {
      name: "receiverId",
      allowNull: false
    },
    constraints: constraints
  });
  db.icat_users_extend.hasMany(db.icat_notices, {
    sourceKey: "uid",
    foreignKey: {
      name: "senderId",
      allowNull: false
    },
    constraints: constraints
  });
  db.icat_notices.belongsTo(db.icat_users_extend, {
    sourceKey: "uid",
    foreignKey: {
      name: "senderId",
      allowNull: false
    },
    constraints: constraints
  });
  //标签 帖子 多对多关系
  db.icat_tags.belongsToMany(db.icat_posts, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_posts.belongsToMany(db.icat_tags, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  // 附件 帖子 多对多关系
  // 注意，附件的分配和上传者无关，同一个上传者的附件可以分配到其余上传者
  db.icat_posts.belongsToMany(db.icat_files, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_files.belongsToMany(db.icat_posts, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  
  // 用户 -(多对多)- 积分类型 -(一对多)- 积分的值
  //                       -(多对多)- 积分策略

  // 用户 积分计算表 一对多关系
  db.icat_users_extend.hasMany(db.icat_credits_calc, {
    foreignKey: "uid",
    sourceKey: "uid",
    onDelete: "CASCADE",
    constraints: constraints
  });
  db.icat_credits_calc.belongsTo(db.icat_users_extend, {
    constraints: constraints
  });
  //积分 积分策略 多对多关系
  db.icat_credits.belongsToMany(db.icat_strategys, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_strategys.belongsToMany(db.icat_credits, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //用户和用户组 多对多关系
  db.icat_users_extend.belongsToMany(db.icat_groups, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_groups.belongsToMany(db.icat_users_extend, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //用户组和权限 多对多关系
  db.icat_groups.belongsToMany(db.icat_powers, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_powers.belongsToMany(db.icat_groups, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //用户和帖子 通过收藏表 多对多关系
  db.icat_users_extend.belongsToMany(db.icat_posts, {
    as: "star_post",
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_posts.belongsToMany(db.icat_users_extend, {
    as: "star_user",
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //用户和帖子 通过喜欢表 多对多关系
  db.icat_users_extend.belongsToMany(db.icat_posts, {
    as: "love_post",
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_posts.belongsToMany(db.icat_users_extend, {
    as: "love_user",
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //用户物品，通过用户物品表 多对多关系
  db.icat_users_extend.belongsToMany(db.icat_goods, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_goods.belongsToMany(db.icat_users_extend, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //物品 和 积分 多对多关系，代表物品价格
  db.icat_goods.belongsToMany(db.icat_credits, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_credits.belongsToMany(db.icat_goods, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //物品 附件 多对多，代表物品图标、地图、小地图、精灵
  db.icat_goods.belongsToMany(db.icat_files, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_files.belongsToMany(db.icat_goods, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //用户，用户变量 一对多关系
  db.icat_users_extend.hasMany(db.icat_vars, {
    sourceKey: "uid",
    foreignKey: "uid",
    onDelete: "CASCADE",
    constraints: constraints
  });
  db.icat_vars.belongsTo(db.icat_users_extend, {
    foreignKey: "uid",
    targetKey: "uid",
    constraints: constraints
  });
  //任务 用户 多对多 任务 积分 任务 物品
  //暂时没用到
  db.icat_tasks.belongsToMany(db.icat_users_extend, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_users_extend.belongsToMany(db.icat_tasks, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_tasks.belongsToMany(db.icat_credits, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_credits.belongsToMany(db.icat_tasks, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_tasks.belongsToMany(db.icat_goods, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_goods.belongsToMany(db.icat_tasks, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //cdkey和用户拥有的cdkey
  //注意cdkey的逻辑是用户一对多，但是我们使用多对多关系和isUsed字段控制是否使用过来更好地实现
  db.icat_users_extend.belongsToMany(db.icat_cdkeys, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_cdkeys.belongsToMany(db.icat_users_extend, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  //地图 事件 多对多
  db.icat_maps.belongsToMany(db.icat_events, {
    through: {
      model: db.icat_maps_events,
      unique: unique
    },
    constraints: constraints
  });
  db.icat_events.belongsToMany(db.icat_maps, {
    through: {
      model: db.icat_maps_events,
      unique: unique
    },
    constraints: constraints
  });
  //帖子 事件 多对多
  db.icat_posts.belongsToMany(db.icat_happens, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
  return db.icat_happens.belongsToMany(db.icat_posts, {
    through: {
      model: db.icat_relations,
      unique: unique
    },
    constraints: constraints
  });
};

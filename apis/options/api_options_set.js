// Generated by CoffeeScript 2.6.1
var createAPI, mail, options;

createAPI = require("../../tools/api/createAPI");

options = require("../../config/options");

mail = require("../../mail/mail_main");

module.exports = createAPI("option", {
  cnName: "选项",
  setPayload: {
    value: [Joi.string().allow(""), Joi.number().strict(), Joi.array(), Joi.object()]
  },
  setFields: ["value"],
  setBeforeUpdateData: async function(sendParams) {
    var auth, config, db, err, h, option, par, que, req, scheme, t;
    try {
      ({req, h, db, que, par, auth, config, t} = sendParams);
      option = (await db.icat_options.findOne({
        where: {
          optionid: Number(par.optionid)
        },
        transaction: t
      }));
      if (option) {
        if (option.joi) {
          try {
            scheme = eval(`(${option.joi})()`);
            return Joi.attempt(que.value, scheme);
          } catch (error) {
            err = error;
            await t.commit();
            return sendParams.stop = {
              ok: false,
              msg: `【key】${que.key}【value】${JSON.stringify(que.value, null, "\t")}【message】${err.message}`
            };
          }
        } else {
          await t.commit();
          return sendParams.stop = {
            ok: "false",
            msg: "找不到joi字段的值"
          };
        }
      }
    } catch (error) {
      err = error;
      console.log(err);
      throw err;
    }
  },
  setAfterUpdateData: async function(sendParams) {
    var err;
    try {
      //更新options缓存
      await options.pull();
      return (await mail.init());
    } catch (error) {
      err = error;
      throw err;
    }
  }
}).set;

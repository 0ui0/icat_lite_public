// Generated by CoffeeScript 2.6.1
/*
  desc
  linkid
  limit
*/
module.exports = {
  method: "get",
  path: "/api/tasks/get/{taskid?}",
  options: {
    auth: {
      mode: "try"
    },
    validate: {
      params: Joi.object({
        taskid: Joi.string().pattern(/^\d+$/)
      }),
      query: Joi.object({
        limit: Joi.string().pattern(/^\d[0-5]{0,}$/),
        offset: Joi.string().pattern(/^\d+$/),
        order: Joi.string().valid("desc", "asc")
      })
    }
  },
  handler: async function(req, h) {
    var allCount, auth, data, db, err, i, index, len, que, stat, task;
    try {
      db = req.server.db;
      que = req.query;
      auth = req.auth.credentials;
      // 注意参数类型为字符串
      data = (await db.icat_tasks.findAll({
        where: {...(req.params.taskid ? {
            taskid: req.params.taskid
          } : void 0)},
        order: [["order", "ASC"]],
        ...(que.limit != null ? {
          limit: Number(que.limit)
        } : void 0),
        ...(que.offset != null ? {
          offset: Number(que.offset)
        } : void 0)
      }));
      
      //注意这里将对数据解除包装
      if (auth != null ? auth.uid : void 0) {
        for (index = i = 0, len = data.length; i < len; index = ++i) {
          task = data[index];
          stat = (await db.icat_stats.findOne({
            where: {
              taskid: task.taskid,
              uid: auth.uid
            }
          }));
          data[index] = JSON.parse(JSON.stringify(data[index]));
          if (stat) {
            data[index].icat_stats = JSON.parse(JSON.stringify(stat));
          }
        }
      }
      allCount = (await db.icat_tasks.count());
      if (req.params.taskid) { //如果请求的是单个帖子且data[0]不存在
        if (!data[0]) {
          return {
            ok: false,
            msg: "未匹配到对应数据"
          };
        }
      }
      return {
        ok: true,
        msg: "获取任务列表成功",
        data: req.params.taskid ? data[0] : data, //如果是单个数据，需要释放数组
        allCount: allCount
      };
    } catch (error) {
      err = error;
      console.log(err);
      return {
        ok: false,
        msg: "服务器内部错误"
      };
    }
  }
};

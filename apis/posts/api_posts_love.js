// Generated by CoffeeScript 2.6.1
/*
pid
*/
var Op, cacheOpera;

({Op} = require("sequelize"));

cacheOpera = require("./cacheOpera");

module.exports = {
  method: "post",
  path: "/api/posts/love/{pid}",
  options: {
    validate: {
      params: Joi.object({
        pid: Joi.string().pattern(/^\d+$/).required()
      })
    }
  },
  handler: async function(req, h) {
    var auth, db, err, hasLoveUser, notice, pid, post, que, user;
    try {
      db = req.server.db;
      que = req.payload;
      auth = req.auth.credentials;
      pid = Number(req.params.pid);
      user = (await db.icat_users_extend.findOne({
        attributes: ["uid", "uextid"],
        where: {
          uid: auth.uid
        }
      }));
      post = (await db.icat_posts.findOne({
        attributes: ["pid", "uid", "title", "author", "linkid"],
        where: {
          pid: pid
        }
      }));
      hasLoveUser = (await post.hasLove_user(user, {
        through: {
          where: {
            whoUse: "post_user_love"
          }
        }
      }));
      if (!hasLoveUser) {
        await db.icat_relations.create({
          icatPostPid: post.pid,
          icatUsersExtendUextid: user.uextid,
          whoUse: "post_user_love"
        });
        if (post.uid !== auth.uid) {
          notice = (await db.icat_notices.findOne({
            attributes: ["ntceid"],
            where: {
              senderId: auth.uid,
              receiverId: post.uid,
              msgType: "系统",
              msgAction: "喜欢了",
              msgContent: JSON.stringify({
                thread: post.pid,
                threadTitle: post.title
              })
            }
          }));
          if (!notice) {
            notice = (await db.icat_notices.create({
              sender: auth.user,
              senderId: auth.uid,
              receiver: post.author,
              receiverId: post.uid,
              msgType: "系统",
              msgAction: "喜欢了",
              msgContent: JSON.stringify({
                thread: post.pid,
                threadTitle: post.title
              })
            }));
          }
        }
        //清除缓存表
        await cacheOpera.clean(db, post);
        return {
          ok: true,
          type: "love",
          msg: "帖子喜欢成功"
        };
      } else {
        await db.icat_relations.destroy({
          where: {
            icatPostPid: post.pid,
            icatUsersExtendUextid: user.uextid,
            whoUse: "post_user_love"
          }
        });
        //清除缓存表
        await cacheOpera.clean(db, post);
        return {
          ok: true,
          type: "unlove",
          msg: "帖子被取消喜欢"
        };
      }
    } catch (error) {
      err = error;
      console.log(err);
      return {
        ok: false,
        msg: "服务器内部错误"
      };
    }
  }
};

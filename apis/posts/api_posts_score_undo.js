// Generated by CoffeeScript 2.6.1
var Op, cacheOpera;

({Op} = require("sequelize"));

cacheOpera = require("./cacheOpera");

module.exports = {
  method: "post",
  path: "/api/posts/score/undo/{pid}",
  options: {
    validate: {
      params: Joi.object({
        pid: Joi.string().pattern(/^\d+$/).required()
      })
    }
  },
  handler: async function(req, h) {
    var auth, contentJSON, db, err, fromRecord, pid, post, que, t, targetRecord;
    try {
      db = req.server.db;
      que = req.payload;
      auth = req.auth.credentials;
      pid = Number(req.params.pid);
      t = (await db.mysql.transaction());
      post = (await db.icat_posts.findOne({
        attributes: ["pid", "uid", "author", "contentType", "content", "linkid"],
        where: {
          pid: pid,
          contentType: "score"
        },
        transaction: t
      }));
      if (!post) {
        await t.commit();
        return {
          ok: false,
          msg: "无该评分记录"
        };
      }
      contentJSON = JSON.parse(post.content);
      if (auth.icat_users_extend.power >= 90) {
        fromRecord = (await db.icat_credits_calc.findOne({
          attributes: ["creditCalcid", "freeze"],
          where: {
            creditCalcid: contentJSON.fromCalcid
          },
          transaction: t
        }));
        targetRecord = (await db.icat_credits_calc.findOne({
          attributes: ["creditCalcid", "freeze"],
          where: {
            creditCalcid: contentJSON.targetCalcid
          },
          transaction: t
        }));
        if (fromRecord.freeze === 0) {
          fromRecord.freeze = 1;
        } else {
          fromRecord.freeze = 0;
        }
        if (targetRecord.freeze === 0) {
          targetRecord.freeze = 1;
        } else {
          targetRecord.freeze = 0;
        }
        await targetRecord.save({
          transaction: t
        });
        await fromRecord.save({
          transaction: t
        });
        contentJSON.freeze = fromRecord.freeze;
        post.content = JSON.stringify(contentJSON);
        await post.save();
        //清理帖子缓存
        await cacheOpera.clean(db, post);
        await t.commit();
        return {
          ok: true,
          msg: "撤销/重置评分成功"
        };
      } else {
        await t.commit();
        return {
          ok: false,
          msg: "权限不足"
        };
      }
    } catch (error) {
      err = error;
      await t.rollback();
      console.log(err);
      return {
        ok: false,
        msg: "服务器内部错误"
      };
    }
  }
};

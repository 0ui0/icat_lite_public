// Generated by CoffeeScript 2.6.1
/*
pid
*/
var Op, cacheOpera;

({Op} = require("sequelize"));

cacheOpera = require("./cacheOpera");

module.exports = {
  method: "post",
  path: "/api/posts/star/{pid}",
  options: {
    validate: {
      params: Joi.object({
        pid: Joi.string().pattern(/^\d+$/).required()
      }),
      payload: Joi.object({
        starType: Joi.string().min(2).max(8).default("默认分类")
      })
    }
  },
  handler: async function(req, h) {
    var auth, db, err, pid, post, postUserStar, que, user;
    try {
      db = req.server.db;
      que = req.payload;
      auth = req.auth.credentials;
      pid = Number(req.params.pid);
      user = (await db.icat_users_extend.findOne({
        attributes: ["uid", "uextid"],
        where: {
          uid: auth.uid
        }
      }));
      post = (await db.icat_posts.findOne({
        attributes: ["pid", "linkid"],
        where: {
          pid: pid
        }
      }));
      postUserStar = (await post.hasStar_user(user, {
        through: {
          where: {
            whoUse: "post_user_star"
          }
        }
      }));
      if (!postUserStar) {
        //说明：sequelize自带的延迟加载方法add，remove等有问题，不能附加where条件，需要手动操作relation表
        //post.addStar_user x 会清除上次的关联数据
        //post.removeStar_user x 会额外删除Love_user
        await db.icat_relations.create({
          icatPostPid: post.pid,
          icatUsersExtendUextid: user.uextid,
          whoUse: "post_user_star",
          key: "starType",
          value: (que != null ? que.starType : void 0) ? que.starType : "默认分类",
          type: "string"
        });
        //清除缓存表
        await cacheOpera.clean(db, post);
        return {
          ok: true,
          type: "star",
          msg: "帖子收藏成功"
        };
      } else {
        await db.icat_relations.destroy({
          where: {
            icatPostPid: post.pid,
            icatUsersExtendUextid: user.uextid,
            whoUse: "post_user_star",
            value: (que != null ? que.starType : void 0) ? que.starType : "默认分类",
            type: "string"
          }
        });
        //清除缓存表
        await cacheOpera.clean(db, post);
        return {
          ok: true,
          type: "unstar",
          msg: "帖子被取消收藏"
        };
      }
    } catch (error) {
      err = error;
      console.log(err);
      return {
        ok: false,
        msg: "服务器内部错误"
      };
    }
  }
};

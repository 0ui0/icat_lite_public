// Generated by CoffeeScript 2.6.1
var Op, blocks, m, options, posts, render, timestamp;

if (!global.window) {
  global.window = global.document = global.requestAnimationFrame = void 0;
}

({Op} = require("sequelize"));

m = require("mithril");

render = require("mithril-node-render");

options = require("../../config/options");

posts = null;

blocks = null;

timestamp = 0;

module.exports = {
  method: "get",
  path: "/sitemap.html",
  options: {
    auth: false
  },
  handler: async function(req, h) {
    var auth, db, description, err, keywords, par, que, sitemap, title;
    que = req.query;
    db = req.server.db;
    auth = req.auth.credentials;
    par = req.params;
    try {
      title = (await options.get("global_siteName"));
      description = (await options.get("global_siteDescription"));
      keywords = (await options.get("global_siteKeywords"));
      if (Date.now() - timestamp > 10 * 60 * 1000) {
        posts = (await db.icat_posts.findAll({
          attributes: ["pid", "title", "linkid"],
          limit: 300,
          offset: 0,
          order: [["pid", "desc"]]
        }));
        blocks = (await db.icat_posts.findAll({
          attributes: ["pid", "title", "linkid"],
          where: {
            contentType: "block"
          }
        }));
        timestamp = Date.now();
      }
      sitemap = render.sync(m("html[lang=zh]", [
        m("head",
        [
          m("title",
          `${title}`),
          m("meta[charset=utf-8]"),
          m("meta",
          {
            name: "viewport",
            content: "width=device-width, initial-scale=1.0, user-scalable=no"
          }),
          m("meta",
          {
            name: "keywords",
            content: keywords
          }),
          m("meta",
          {
            name: "description",
            content: description
          })
        ]),
        m("body",
        [
          m("h1",
          `${title}`),
          m("h2",
          "站点地图"),
          m("section",
          [m("a[href=/][target=_blank]",
          m("h3",
          "首页"))]),
          m("section",
          [
            m("h3",
            "最新内容"),
            m("ul",
            [
              posts != null ? posts.map((post) => {
                return m("li",
              [
                  m("ul",
                  [
                    m("li",
                    [
                      m("a",
                      {
                        href: `/null-${post.pid}-null.html`,
                        target: "_blank"
                      },
                      post.title)
                    ]),
                    m("li",
                    [
                      m("a",
                      {
                        href: `/post_list/${post.pid}_-1_0_0.html`,
                        target: "_blank"
                      },
                      post.title)
                    ])
                  ])
                ]);
              }) : void 0
            ])
          ]),
          m("section",
          [
            m("h3",
            "板块导航"),
            m("ul",
            [
              blocks != null ? blocks.map((block) => {
                block.title = block.title.replace("{{{block}}}-",
              "");
                return m("li",
              [
                  m("ul",
                  [
                    m("li",
                    [
                      m("a",
                      {
                        href: `/${block.pid}-null-null.html`,
                        target: "_blank"
                      },
                      block.title)
                    ]),
                    m("li",
                    [
                      m("a",
                      {
                        href: `/post_list/-1_${block.pid}_0_0.html`,
                        target: "_blank"
                      },
                      block.title)
                    ])
                  ])
                ]);
              }) : void 0
            ])
          ])
        ])
      ]));
      return h.response(sitemap);
    } catch (error) {
      err = error;
      console.log(err);
      return h.response(`<!DOCTYPE html>
<html>
  <head>
    <title>${title} - 发生了奇怪的状况</title>
    <meta charset="utf-8">
    <body>┭┮﹏┭┮呜呜，服务器好像不理咱了，要不一会儿再调戏它？</body>
  </head>
</html>`).code(500);
    }
  }
};

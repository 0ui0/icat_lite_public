// Generated by CoffeeScript 2.6.1
/*
  @key que.key
  @value que.value
*/
var varKeys;

varKeys = [
  {
    key: "press",
    type: "[object Number]"
  },
  {
    key: "inviteCodes",
    type: "[object Array]"
  },
  {
    key: "editorTextBak",
    type: "[object Array]"
  },
  {
    key: "christmasHatSwitch",
    type: "[object Number]"
  },
  {
    key: "likeSays",
    type: "[object Array]"
  },
  {
    key: "good\\d+_switch",
    type: "[obejct Number]"
  },
  {
    key: "racketInfo",
    type: "[object Array]"
  },
  {
    key: "zoneCompsKeyOrder",
    type: "[object Array]"
  }
];

module.exports = {
  method: "post",
  path: "/api/vars/set",
  options: {
    validate: {
      payload: Joi.object({
        key: Joi.string().token().required(),
        value: [Joi.string().required(), Joi.number().required(), Joi.object().required(), Joi.boolean().required(), Joi.array().required()]
      })
    }
  },
  handler: async function(req, h) {
    var auth, db, err, que, tmp, variable;
    que = req.payload;
    db = req.server.db;
    auth = req.auth.credentials;
    try {
      //检测变量是否合理
      if (!varKeys.find((item) => {
        return que.key.match(new RegExp(item.key), "g") && Object.prototype.toString.call(que.value) === item.type;
      })) {
        return {
          ok: false,
          msg: "非法操作"
        };
      }
      if (que.value === "") { //空字符串代表删除
        tmp = (await db.icat_vars.findOne({
          where: {
            uid: auth.uid,
            key: que.key
          }
        }));
        if (tmp) {
          await tmp.destroy();
        } else {
          return {
            ok: false,
            msg: "变量不存在，无法删除"
          };
        }
        return {
          ok: true,
          msg: "已删除该变量"
        };
      }
      variable = ((await db.icat_vars.findOrCreate({
        where: {
          uid: auth.uid,
          key: que.key
        },
        defaults: {
          uid: auth.uid,
          user: auth.user,
          key: que.key,
          value: que.value
        }
      })))[0];
      variable.value = que.value;
      await variable.save();
      return {
        ok: true,
        data: variable.value
      };
    } catch (error) {
      err = error;
      console.log(err);
      return {
        ok: false,
        msg: "服务器内部错误"
      };
    }
  }
};

// Generated by CoffeeScript 2.6.1
var cacheOpera;

cacheOpera = require("../posts/cacheOpera");

cacheOpera;

module.exports = {
  method: "post",
  path: "/api/blocks/set/{pid?}",
  options: {
    validate: {
      params: Joi.object({
        pid: Joi.string().pattern(/^\d+$/)
      }),
      payload: Joi.object({
        title: Joi.string().min(1).max(30).pattern(/{{{block}}}-/).required(),
        content: Joi.object({
          name: Joi.string().min(1).max(8).required(),
          sizeType: Joi.number().default(1),
          icon: Joi.string().min(0).max(80).allow("").default(""),
          order: Joi.number().default(0),
          description: Joi.string().default("").allow(""),
          comp: Joi.string().default("").allow("")
        }).required(),
        isTop: Joi.number().default(0),
        isLock: Joi.number().default(0),
        contentType: Joi.string().valid("block", "sysFile").default("block")
      }).unknown(true)
    }
  },
  handler: async function(req, h) {
    var auth, db, err, pid, que, tmp;
    try {
      db = req.server.db;
      que = req.payload;
      auth = req.auth.credentials;
      pid = Number(req.params.pid);
      if (auth.icat_users_extend.power >= 90) {
        if (pid) { //有pid说明是更新
          tmp = (await db.icat_posts.findOne({
            where: {
              pid: pid
            }
          }));
          if (que.title) {
            tmp.title = que.title;
          }
          if (que.content) {
            tmp.content = JSON.stringify(que.content);
          }
          if (que.isTop != null) {
            tmp.isTop = que.isTop;
          }
          if (que.isLock != null) {
            tmp.isLock = que.isLock;
          }
          if (que.content) {
            tmp.author = que.content.name;
          }
          tmp.finallyTime = Date.now();
          tmp.updateTimestamp = Date.now();
          await tmp.save();
          await cacheOpera.clean(db, tmp);
          return {
            ok: true,
            msg: "板块修改成功"
          };
        } else {
          tmp = (await db.icat_posts.create({
            uid: auth.uid,
            author: que.content.name,
            title: que.title,
            content: JSON.stringify(que.content),
            contentType: que.contentType,
            createTime: Date.now(),
            finallyTime: Date.now(),
            createTimestamp: Date.now(),
            updateTimestamp: Date.now(),
            linkid: 0,
            linkChain: 0
          }));
          return {
            ok: true,
            msg: "板块创建成功",
            pid: tmp.pid
          };
        }
      } else {
        return {
          ok: false,
          msg: "权限不足"
        };
      }
    } catch (error) {
      err = error;
      console.log(err);
      return {
        ok: false,
        msg: "服务器内部错误"
      };
    }
  }
};

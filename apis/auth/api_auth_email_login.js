// Generated by CoffeeScript 2.6.1
var ActionCheck, actionCheck, config, crypto, md5;

crypto = require("crypto");

config = require("../../config/config");

md5 = config.md5;

ActionCheck = require("../../tools/actionCheck/actionCheck_main");

actionCheck = new ActionCheck();

module.exports = {
  method: "post",
  path: "/api/auth/email/login",
  options: {
    auth: false,
    validate: {
      payload: Joi.object({
        //.pattern(/^(\w+@(vip\.){0,1}qq\.com)|(\w+@foxmail\.com)$/)
        //.error(new Error("目前仅允许使用QQ邮箱哦！"))
        email: (Joi.string().email()).required(),
        code: Joi.string().token()
      })
    }
  },
  handler: async function(req, h) {
    var actionCheckStatus, auth, db, err, loginUser, mail, que, users;
    que = req.payload;
    db = req.server.db;
    mail = req.server.mail;
    auth = req.auth.credentials;
    try {
      actionCheckStatus = (await actionCheck.emailVerify(que.email, que.code, auth, db));
      if (actionCheckStatus.returnObj) {
        return actionCheckStatus.returnObj;
      } else if (actionCheckStatus.verifySucess) {
        users = actionCheckStatus.users;
        await req.cookieAuth.set({
          uid: users[0].uid,
          user: users[0].user
        });
        
        //更新最后登录时间
        loginUser = (await db.icat_users_extend.findOne({
          where: {
            uid: users[0].uid
          }
        }));
        loginUser.loginTimestamp = Date.now();
        await loginUser.save();
        return {
          ok: true,
          msg: "登录成功",
          user: users[0]
        };
      }
    } catch (error) {
      err = error;
      console.log(err);
      return {
        ok: false,
        msg: "发生了一些错误"
      };
    }
  }
};

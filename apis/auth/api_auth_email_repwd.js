// Generated by CoffeeScript 2.6.1
var config, crypto, md5, passwordCheck;

crypto = require("crypto");

config = require("../../config/config");

passwordCheck = require("../../tools/password/password_check");

md5 = config.md5;

module.exports = {
  method: "post",
  path: "/api/auth/email/repwd",
  options: {
    validate: {
      payload: Joi.object({
        new: Joi.string().required(),
        token: Joi.string().required()
      })
    }
  },
  handler: async function(req, h) {
    var auth, db, err, pwdCheck, que, user, verifyStatus;
    que = req.payload;
    db = req.server.db;
    auth = req.auth.credentials;
    if (auth.uid == null) {
      return {
        ok: false,
        msg: "非法操作"
      };
    }
    try {
      verifyStatus = Jwt.verifyToken(que.token, config.key);
      if (!verifyStatus.valid) {
        return {
          ok: false,
          clearToken: true,
          msg: "授权超时，请重新验证"
        };
      }
      user = (await db.icat_users.findOne({
        where: {
          uid: auth.uid
        }
      }));
      if (user.password === md5(md5(que.new) + config.key)) {
        return {
          ok: false,
          msg: "新旧密码一致"
        };
      }
      pwdCheck = (await passwordCheck(user.user, que.new));
      if (!pwdCheck.pass) {
        return {
          ok: false,
          msg: pwdCheck.tip
        };
      }
      user.password = que.new;
      await user.save();
      await req.cookieAuth.clear();
      return {
        ok: true,
        msg: "改密成功，请重新登录",
        needLogout: true
      };
    } catch (error) {
      err = error;
      console.log(err);
      return {
        ok: false,
        msg: "服务器内部错误"
      };
    }
  }
};

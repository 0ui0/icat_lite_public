// Generated by CoffeeScript 2.6.1
var config, crypto, md5, options, passwordCheck;

crypto = require("crypto");

config = require("../../config/config");

options = require("../../config/options");

passwordCheck = require("../../tools/password/password_check");

md5 = config.md5;

module.exports = {
  method: "post",
  path: "/api/auth/repwd",
  options: {
    validate: {
      payload: Joi.object({
        old: Joi.string(),
        new: Joi.string()
      })
    }
  },
  handler: async function(req, h) {
    var auth, db, err, pwdCheck, que, user;
    que = req.payload;
    db = req.server.db;
    auth = req.auth.credentials;
    if (auth.uid == null) {
      return {
        ok: false,
        msg: "非法操作"
      };
    }
    try {
      user = (await db.icat_users.findOne({
        where: {
          uid: auth.uid,
          password: md5(md5(que.old) + config.key)
        }
      }));
      if (user) {
        if (que.old === que.new) {
          return {
            ok: false,
            msg: "新旧密码一致"
          };
        }
        //检查密码合法性
        pwdCheck = (await passwordCheck(user.user, que.new));
        if (!pwdCheck.pass) {
          return {
            ok: false,
            msg: pwdCheck.tip
          };
        }
        user.password = que.new;
        await user.save();
        await req.cookieAuth.clear();
        return {
          ok: true,
          msg: "改密成功，请重新登录",
          needLogout: true
        };
      } else {
        return {
          ok: false,
          msg: "原密码错误"
        };
      }
    } catch (error) {
      err = error;
      console.log(err);
      return {
        ok: false,
        msg: "服务器内部错误"
      };
    }
  }
};

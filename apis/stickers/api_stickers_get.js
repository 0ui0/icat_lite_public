// Generated by CoffeeScript 2.6.1
var fs, pathLib;

fs = require("fs-extra");

pathLib = require("path");

module.exports = {
  method: "get",
  path: "/api/stickers/get",
  options: {
    auth: false
  },
  handler: async function(req, h) {
    var auth, data, db, dir, dirImg, dirSticker, err, fRoot, img, item, que, root;
    que = req.query;
    db = req.server.db;
    auth = req.auth.credentials;
    try {
      root = "www/public/statics/sticker";
      fRoot = "statics/sticker";
      dirSticker = (await fs.readdir(pathLib.resolve(`./${root}`)));
      dirSticker = (await (async function() {
        var i, len, results;
        results = [];
        for (i = 0, len = dirSticker.length; i < len; i++) {
          item = dirSticker[i];
          if (((await fs.stat(pathLib.resolve(`./${root}/${item}`)))).isDirectory()) {
            results.push(item);
          }
        }
        return results;
      })());
      data = (await (async function() {
        var i, len, results;
        results = [];
        for (i = 0, len = dirSticker.length; i < len; i++) {
          dir = dirSticker[i];
          dirImg = ((await fs.readdir(pathLib.resolve(`./${root}/${dir}`)))).filter((item) => {
            return item.match(/gif|png|jpg|jpeg|/ig);
          });
          results.push({
            name: dir,
            imgs: (function() {
              var j, len1, results1;
              results1 = [];
              for (j = 0, len1 = dirImg.length; j < len1; j++) {
                img = dirImg[j];
                results1.push({
                  url: `/${fRoot}/${dir}/${img}`,
                  markdown: `![表情](/${fRoot}/${dir}/${img})`
                });
              }
              return results1;
            })()
          });
        }
        return results;
      }).call(this));
      return {
        ok: true,
        msg: "获取表情列表成功",
        data: data
      };
    } catch (error) {
      err = error;
      console.log(err);
      return {
        ok: false,
        msg: "服务器内部错误"
      };
    }
  }
};

// Generated by CoffeeScript 2.6.1
var options;

options = require("../../config/options");

module.exports = async function(user, pwd) {
  var err, joinPasswordComplex, joinPasswordLength, needReturn, pwTip;
  checkType(arguments, ["string", "string"], "password_check()");
  try {
    joinPasswordLength = (await options.get("join_passwordLength"));
    joinPasswordComplex = (await options.get("join_passwordComplex"));
    pwTip = `密码不合法（允许长度：${joinPasswordLength[0]}-${joinPasswordLength[1]}字符，不能包含引号）`;
    if (!new RegExp(`^.{${joinPasswordLength[0]},${joinPasswordLength[1]}}$`).test(pwd)) {
      return {
        pass: false,
        tip: pwTip
      };
    }
    if (/['|"]/.test(pwd)) {
      return {
        pass: false,
        tip: pwTip
      };
    }
    needReturn = false;
    if (joinPasswordComplex.lowercase === 1) {
      pwTip += "；须包含小字母";
      if (!/[a-z]/.test(pwd)) {
        needReturn = true;
      }
    }
    if (joinPasswordComplex.uppercase === 1) {
      pwTip += "；须包含大写字母";
      if (!/[A-Z]/.test(pwd)) {
        needReturn = true;
      }
    }
    if (joinPasswordComplex.sign === 1) {
      pwTip += "；须包含特殊符号";
      if (!/[!@#$%^&*()_+\-=\[\]{}:;?\/\\<>\.,~`]/.test(pwd)) {
        needReturn = true;
      }
    }
    if (joinPasswordComplex.number === 1) {
      pwTip += "；须包含数字";
      if (!/\d/.test(pwd)) {
        needReturn = true;
      }
    }
    if (joinPasswordComplex.avoidUserName === 1) {
      pwTip += "；不能和用户名相同";
      if (pwd === user) {
        needReturn = true;
      }
    }
    if (needReturn) {
      return {
        pass: false,
        tip: pwTip
      };
    } else {
      return {
        pass: true,
        tip: "合法的密码"
      };
    }
  } catch (error) {
    err = error;
    throw err;
  }
};

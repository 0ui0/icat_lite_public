// Generated by CoffeeScript 2.6.1
var nodemailer, options;

nodemailer = require("nodemailer");

options = require("../config/options");

module.exports = {
  transporter: null,
  init: async function() {
    var email_password, email_senderMail, email_smtpPort, email_smtpServer, email_userName, email_valid;
    //读取数据库邮箱配置
    email_smtpServer = (await options.get("email_smtpServer"));
    email_smtpPort = (await options.get("email_smtpPort"));
    email_senderMail = (await options.get("email_senderMail"));
    email_valid = (await options.get("email_valid"));
    email_userName = (await options.get("email_userName"));
    email_password = (await options.get("email_password"));
    return this.transporter = nodemailer.createTransport({
      pool: true,
      maxConnections: 5,
      maxMessages: 100,
      host: email_smtpServer, //"smtp.exmail.qq.com"
      port: email_smtpPort, //465
      secure: email_smtpPort === 465 ? true : false, //useTLS
      secureConnection: true,
      auth: {
        user: email_userName, //"master@tmail.o-o.space"
        pass: email_password //"im6BCAuKNjhTWYGC"
      },
      tls: {}
    });
  },
  //rejectUnauthorized: false #此配置将使用自签名或无效 TLS 证书打开与 TLS 服务器的连接
  send: async function(obj) {
    var email_senderMail, email_switch, err, info;
    checkType(arguments, ["object"], "mail_main.send(obj)");
    try {
      email_switch = (await options.get("email_switch"));
      email_senderMail = (await options.get("email_senderMail"));
      if (!email_switch) {
        throw new Error("电子邮件功能未启动");
      }
      console.log(email_senderMail);
      info = (await this.transporter.sendMail({
        ...obj,
        from: email_senderMail
      }));
      return info;
    } catch (error) {
      err = error;
      throw err;
    }
  }
};
